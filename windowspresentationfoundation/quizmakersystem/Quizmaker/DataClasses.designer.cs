#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Finals_Machine_Problem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BT3MP1_Trial")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttbOccupation(tbOccupation instance);
    partial void UpdatetbOccupation(tbOccupation instance);
    partial void DeletetbOccupation(tbOccupation instance);
    partial void InserttbUser(tbUser instance);
    partial void UpdatetbUser(tbUser instance);
    partial void DeletetbUser(tbUser instance);
    partial void InserttbStudentAttemp(tbStudentAttemp instance);
    partial void UpdatetbStudentAttemp(tbStudentAttemp instance);
    partial void DeletetbStudentAttemp(tbStudentAttemp instance);
    partial void InserttbQuiz(tbQuiz instance);
    partial void UpdatetbQuiz(tbQuiz instance);
    partial void DeletetbQuiz(tbQuiz instance);
    partial void InserttbQuestion(tbQuestion instance);
    partial void UpdatetbQuestion(tbQuestion instance);
    partial void DeletetbQuestion(tbQuestion instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::Finals_Machine_Problem.Properties.Settings.Default.BT3MP1_TrialConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbOccupation> tbOccupations
		{
			get
			{
				return this.GetTable<tbOccupation>();
			}
		}
		
		public System.Data.Linq.Table<tbUser> tbUsers
		{
			get
			{
				return this.GetTable<tbUser>();
			}
		}
		
		public System.Data.Linq.Table<tbStudentAttemp> tbStudentAttemps
		{
			get
			{
				return this.GetTable<tbStudentAttemp>();
			}
		}
		
		public System.Data.Linq.Table<tbQuiz> tbQuizs
		{
			get
			{
				return this.GetTable<tbQuiz>();
			}
		}
		
		public System.Data.Linq.Table<tbQuestion> tbQuestions
		{
			get
			{
				return this.GetTable<tbQuestion>();
			}
		}
		
		public System.Data.Linq.Table<viewAverageList> viewAverageLists
		{
			get
			{
				return this.GetTable<viewAverageList>();
			}
		}
		
		public System.Data.Linq.Table<viewActiveQuiz> viewActiveQuizs
		{
			get
			{
				return this.GetTable<viewActiveQuiz>();
			}
		}
		
		public System.Data.Linq.Table<viewSUMofScore1> viewSUMofScore1s
		{
			get
			{
				return this.GetTable<viewSUMofScore1>();
			}
		}
		
		public System.Data.Linq.Table<viewQuizNum> viewQuizNums
		{
			get
			{
				return this.GetTable<viewQuizNum>();
			}
		}
		
		public System.Data.Linq.Table<viewQuestionAnswer> viewQuestionAnswers
		{
			get
			{
				return this.GetTable<viewQuestionAnswer>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspCreateQuestion")]
		public int uspCreateQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string qquestion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string qone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string qtwo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string qthree, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string qfour, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string qanswer, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string qimage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> quiznum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qquestion, qone, qtwo, qthree, qfour, qanswer, qimage, quiznum);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspCreateQuiz")]
		public int uspCreateQuiz([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string quizdetails, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> quizstatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), quizdetails, quizstatus);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspCreateStudentAttempt")]
		public int uspCreateStudentAttempt([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentattempts, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentscore, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> quiznum, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> usernum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentattempts, studentscore, quiznum, usernum);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspLoginQuiz")]
		public ISingleResult<uspLoginQuizResult> uspLoginQuiz([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> quiznum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), quiznum);
			return ((ISingleResult<uspLoginQuizResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspLogin")]
		public ISingleResult<uspLoginResult> uspLogin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userNum, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(16)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userNum, password);
			return ((ISingleResult<uspLoginResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspLoginUser")]
		public ISingleResult<uspLoginUserResult> uspLoginUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(16)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, password);
			return ((ISingleResult<uspLoginUserResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbOccupation")]
	public partial class tbOccupation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserTypeID;
		
		private string _UserType;
		
		private EntitySet<tbUser> _tbUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserTypeIDChanging(int value);
    partial void OnUserTypeIDChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    #endregion
		
		public tbOccupation()
		{
			this._tbUsers = new EntitySet<tbUser>(new Action<tbUser>(this.attach_tbUsers), new Action<tbUser>(this.detach_tbUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					this.OnUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserTypeID = value;
					this.SendPropertyChanged("UserTypeID");
					this.OnUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbOccupation_tbUser", Storage="_tbUsers", ThisKey="UserTypeID", OtherKey="UserTypeID")]
		public EntitySet<tbUser> tbUsers
		{
			get
			{
				return this._tbUsers;
			}
			set
			{
				this._tbUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbUsers(tbUser entity)
		{
			this.SendPropertyChanging();
			entity.tbOccupation = this;
		}
		
		private void detach_tbUsers(tbUser entity)
		{
			this.SendPropertyChanging();
			entity.tbOccupation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbUsers")]
	public partial class tbUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _UserFirstName;
		
		private string _UserLastName;
		
		private string _UserPassword;
		
		private int _UserTypeID;
		
		private bool _UserStatus;
		
		private EntitySet<tbStudentAttemp> _tbStudentAttemps;
		
		private EntityRef<tbOccupation> _tbOccupation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserFirstNameChanging(string value);
    partial void OnUserFirstNameChanged();
    partial void OnUserLastNameChanging(string value);
    partial void OnUserLastNameChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnUserTypeIDChanging(int value);
    partial void OnUserTypeIDChanged();
    partial void OnUserStatusChanging(bool value);
    partial void OnUserStatusChanged();
    #endregion
		
		public tbUser()
		{
			this._tbStudentAttemps = new EntitySet<tbStudentAttemp>(new Action<tbStudentAttemp>(this.attach_tbStudentAttemps), new Action<tbStudentAttemp>(this.detach_tbStudentAttemps));
			this._tbOccupation = default(EntityRef<tbOccupation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserFirstName
		{
			get
			{
				return this._UserFirstName;
			}
			set
			{
				if ((this._UserFirstName != value))
				{
					this.OnUserFirstNameChanging(value);
					this.SendPropertyChanging();
					this._UserFirstName = value;
					this.SendPropertyChanged("UserFirstName");
					this.OnUserFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserLastName
		{
			get
			{
				return this._UserLastName;
			}
			set
			{
				if ((this._UserLastName != value))
				{
					this.OnUserLastNameChanging(value);
					this.SendPropertyChanging();
					this._UserLastName = value;
					this.SendPropertyChanged("UserLastName");
					this.OnUserLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", DbType="Int NOT NULL")]
		public int UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					if (this._tbOccupation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserTypeID = value;
					this.SendPropertyChanged("UserTypeID");
					this.OnUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatus", DbType="Bit NOT NULL")]
		public bool UserStatus
		{
			get
			{
				return this._UserStatus;
			}
			set
			{
				if ((this._UserStatus != value))
				{
					this.OnUserStatusChanging(value);
					this.SendPropertyChanging();
					this._UserStatus = value;
					this.SendPropertyChanged("UserStatus");
					this.OnUserStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbStudentAttemp", Storage="_tbStudentAttemps", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<tbStudentAttemp> tbStudentAttemps
		{
			get
			{
				return this._tbStudentAttemps;
			}
			set
			{
				this._tbStudentAttemps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbOccupation_tbUser", Storage="_tbOccupation", ThisKey="UserTypeID", OtherKey="UserTypeID", IsForeignKey=true)]
		public tbOccupation tbOccupation
		{
			get
			{
				return this._tbOccupation.Entity;
			}
			set
			{
				tbOccupation previousValue = this._tbOccupation.Entity;
				if (((previousValue != value) 
							|| (this._tbOccupation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbOccupation.Entity = null;
						previousValue.tbUsers.Remove(this);
					}
					this._tbOccupation.Entity = value;
					if ((value != null))
					{
						value.tbUsers.Add(this);
						this._UserTypeID = value.UserTypeID;
					}
					else
					{
						this._UserTypeID = default(int);
					}
					this.SendPropertyChanged("tbOccupation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbStudentAttemps(tbStudentAttemp entity)
		{
			this.SendPropertyChanging();
			entity.tbUser = this;
		}
		
		private void detach_tbStudentAttemps(tbStudentAttemp entity)
		{
			this.SendPropertyChanging();
			entity.tbUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbStudentAttemps")]
	public partial class tbStudentAttemp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentAttemptID;
		
		private System.Nullable<int> _StudentAttempts;
		
		private System.Nullable<int> _StudentScore;
		
		private int _QuizID;
		
		private int _UserID;
		
		private EntityRef<tbUser> _tbUser;
		
		private EntityRef<tbQuiz> _tbQuiz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentAttemptIDChanging(int value);
    partial void OnStudentAttemptIDChanged();
    partial void OnStudentAttemptsChanging(System.Nullable<int> value);
    partial void OnStudentAttemptsChanged();
    partial void OnStudentScoreChanging(System.Nullable<int> value);
    partial void OnStudentScoreChanged();
    partial void OnQuizIDChanging(int value);
    partial void OnQuizIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public tbStudentAttemp()
		{
			this._tbUser = default(EntityRef<tbUser>);
			this._tbQuiz = default(EntityRef<tbQuiz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentAttemptID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentAttemptID
		{
			get
			{
				return this._StudentAttemptID;
			}
			set
			{
				if ((this._StudentAttemptID != value))
				{
					this.OnStudentAttemptIDChanging(value);
					this.SendPropertyChanging();
					this._StudentAttemptID = value;
					this.SendPropertyChanged("StudentAttemptID");
					this.OnStudentAttemptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentAttempts", DbType="Int")]
		public System.Nullable<int> StudentAttempts
		{
			get
			{
				return this._StudentAttempts;
			}
			set
			{
				if ((this._StudentAttempts != value))
				{
					this.OnStudentAttemptsChanging(value);
					this.SendPropertyChanging();
					this._StudentAttempts = value;
					this.SendPropertyChanged("StudentAttempts");
					this.OnStudentAttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentScore", DbType="Int")]
		public System.Nullable<int> StudentScore
		{
			get
			{
				return this._StudentScore;
			}
			set
			{
				if ((this._StudentScore != value))
				{
					this.OnStudentScoreChanging(value);
					this.SendPropertyChanging();
					this._StudentScore = value;
					this.SendPropertyChanged("StudentScore");
					this.OnStudentScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizID", DbType="Int NOT NULL")]
		public int QuizID
		{
			get
			{
				return this._QuizID;
			}
			set
			{
				if ((this._QuizID != value))
				{
					if (this._tbQuiz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuizIDChanging(value);
					this.SendPropertyChanging();
					this._QuizID = value;
					this.SendPropertyChanged("QuizID");
					this.OnQuizIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tbUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbStudentAttemp", Storage="_tbUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public tbUser tbUser
		{
			get
			{
				return this._tbUser.Entity;
			}
			set
			{
				tbUser previousValue = this._tbUser.Entity;
				if (((previousValue != value) 
							|| (this._tbUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbUser.Entity = null;
						previousValue.tbStudentAttemps.Remove(this);
					}
					this._tbUser.Entity = value;
					if ((value != null))
					{
						value.tbStudentAttemps.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("tbUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbQuiz_tbStudentAttemp", Storage="_tbQuiz", ThisKey="QuizID", OtherKey="QuizID", IsForeignKey=true)]
		public tbQuiz tbQuiz
		{
			get
			{
				return this._tbQuiz.Entity;
			}
			set
			{
				tbQuiz previousValue = this._tbQuiz.Entity;
				if (((previousValue != value) 
							|| (this._tbQuiz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbQuiz.Entity = null;
						previousValue.tbStudentAttemps.Remove(this);
					}
					this._tbQuiz.Entity = value;
					if ((value != null))
					{
						value.tbStudentAttemps.Add(this);
						this._QuizID = value.QuizID;
					}
					else
					{
						this._QuizID = default(int);
					}
					this.SendPropertyChanged("tbQuiz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbQuiz")]
	public partial class tbQuiz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuizID;
		
		private string _QuizDetails;
		
		private bool _QuizStatus;
		
		private EntitySet<tbStudentAttemp> _tbStudentAttemps;
		
		private EntitySet<tbQuestion> _tbQuestions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuizIDChanging(int value);
    partial void OnQuizIDChanged();
    partial void OnQuizDetailsChanging(string value);
    partial void OnQuizDetailsChanged();
    partial void OnQuizStatusChanging(bool value);
    partial void OnQuizStatusChanged();
    #endregion
		
		public tbQuiz()
		{
			this._tbStudentAttemps = new EntitySet<tbStudentAttemp>(new Action<tbStudentAttemp>(this.attach_tbStudentAttemps), new Action<tbStudentAttemp>(this.detach_tbStudentAttemps));
			this._tbQuestions = new EntitySet<tbQuestion>(new Action<tbQuestion>(this.attach_tbQuestions), new Action<tbQuestion>(this.detach_tbQuestions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QuizID
		{
			get
			{
				return this._QuizID;
			}
			set
			{
				if ((this._QuizID != value))
				{
					this.OnQuizIDChanging(value);
					this.SendPropertyChanging();
					this._QuizID = value;
					this.SendPropertyChanged("QuizID");
					this.OnQuizIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizDetails", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string QuizDetails
		{
			get
			{
				return this._QuizDetails;
			}
			set
			{
				if ((this._QuizDetails != value))
				{
					this.OnQuizDetailsChanging(value);
					this.SendPropertyChanging();
					this._QuizDetails = value;
					this.SendPropertyChanged("QuizDetails");
					this.OnQuizDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizStatus", DbType="Bit NOT NULL")]
		public bool QuizStatus
		{
			get
			{
				return this._QuizStatus;
			}
			set
			{
				if ((this._QuizStatus != value))
				{
					this.OnQuizStatusChanging(value);
					this.SendPropertyChanging();
					this._QuizStatus = value;
					this.SendPropertyChanged("QuizStatus");
					this.OnQuizStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbQuiz_tbStudentAttemp", Storage="_tbStudentAttemps", ThisKey="QuizID", OtherKey="QuizID")]
		public EntitySet<tbStudentAttemp> tbStudentAttemps
		{
			get
			{
				return this._tbStudentAttemps;
			}
			set
			{
				this._tbStudentAttemps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbQuiz_tbQuestion", Storage="_tbQuestions", ThisKey="QuizID", OtherKey="QuizID")]
		public EntitySet<tbQuestion> tbQuestions
		{
			get
			{
				return this._tbQuestions;
			}
			set
			{
				this._tbQuestions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbStudentAttemps(tbStudentAttemp entity)
		{
			this.SendPropertyChanging();
			entity.tbQuiz = this;
		}
		
		private void detach_tbStudentAttemps(tbStudentAttemp entity)
		{
			this.SendPropertyChanging();
			entity.tbQuiz = null;
		}
		
		private void attach_tbQuestions(tbQuestion entity)
		{
			this.SendPropertyChanging();
			entity.tbQuiz = this;
		}
		
		private void detach_tbQuestions(tbQuestion entity)
		{
			this.SendPropertyChanging();
			entity.tbQuiz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbQuestion")]
	public partial class tbQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private string _QQuestion;
		
		private string _QOne;
		
		private string _QTwo;
		
		private string _QThree;
		
		private string _QFour;
		
		private string _QAnswer;
		
		private string _QImage;
		
		private int _QuizID;
		
		private EntityRef<tbQuiz> _tbQuiz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnQQuestionChanging(string value);
    partial void OnQQuestionChanged();
    partial void OnQOneChanging(string value);
    partial void OnQOneChanged();
    partial void OnQTwoChanging(string value);
    partial void OnQTwoChanged();
    partial void OnQThreeChanging(string value);
    partial void OnQThreeChanged();
    partial void OnQFourChanging(string value);
    partial void OnQFourChanged();
    partial void OnQAnswerChanging(string value);
    partial void OnQAnswerChanged();
    partial void OnQImageChanging(string value);
    partial void OnQImageChanged();
    partial void OnQuizIDChanging(int value);
    partial void OnQuizIDChanged();
    #endregion
		
		public tbQuestion()
		{
			this._tbQuiz = default(EntityRef<tbQuiz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QQuestion", DbType="NVarChar(MAX)")]
		public string QQuestion
		{
			get
			{
				return this._QQuestion;
			}
			set
			{
				if ((this._QQuestion != value))
				{
					this.OnQQuestionChanging(value);
					this.SendPropertyChanging();
					this._QQuestion = value;
					this.SendPropertyChanged("QQuestion");
					this.OnQQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QOne", DbType="NVarChar(100)")]
		public string QOne
		{
			get
			{
				return this._QOne;
			}
			set
			{
				if ((this._QOne != value))
				{
					this.OnQOneChanging(value);
					this.SendPropertyChanging();
					this._QOne = value;
					this.SendPropertyChanged("QOne");
					this.OnQOneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTwo", DbType="NVarChar(100)")]
		public string QTwo
		{
			get
			{
				return this._QTwo;
			}
			set
			{
				if ((this._QTwo != value))
				{
					this.OnQTwoChanging(value);
					this.SendPropertyChanging();
					this._QTwo = value;
					this.SendPropertyChanged("QTwo");
					this.OnQTwoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QThree", DbType="NVarChar(100)")]
		public string QThree
		{
			get
			{
				return this._QThree;
			}
			set
			{
				if ((this._QThree != value))
				{
					this.OnQThreeChanging(value);
					this.SendPropertyChanging();
					this._QThree = value;
					this.SendPropertyChanged("QThree");
					this.OnQThreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QFour", DbType="NVarChar(100)")]
		public string QFour
		{
			get
			{
				return this._QFour;
			}
			set
			{
				if ((this._QFour != value))
				{
					this.OnQFourChanging(value);
					this.SendPropertyChanging();
					this._QFour = value;
					this.SendPropertyChanged("QFour");
					this.OnQFourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QAnswer", DbType="NVarChar(100)")]
		public string QAnswer
		{
			get
			{
				return this._QAnswer;
			}
			set
			{
				if ((this._QAnswer != value))
				{
					this.OnQAnswerChanging(value);
					this.SendPropertyChanging();
					this._QAnswer = value;
					this.SendPropertyChanged("QAnswer");
					this.OnQAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QImage", DbType="NVarChar(MAX)")]
		public string QImage
		{
			get
			{
				return this._QImage;
			}
			set
			{
				if ((this._QImage != value))
				{
					this.OnQImageChanging(value);
					this.SendPropertyChanging();
					this._QImage = value;
					this.SendPropertyChanged("QImage");
					this.OnQImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizID", DbType="Int NOT NULL")]
		public int QuizID
		{
			get
			{
				return this._QuizID;
			}
			set
			{
				if ((this._QuizID != value))
				{
					if (this._tbQuiz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuizIDChanging(value);
					this.SendPropertyChanging();
					this._QuizID = value;
					this.SendPropertyChanged("QuizID");
					this.OnQuizIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbQuiz_tbQuestion", Storage="_tbQuiz", ThisKey="QuizID", OtherKey="QuizID", IsForeignKey=true)]
		public tbQuiz tbQuiz
		{
			get
			{
				return this._tbQuiz.Entity;
			}
			set
			{
				tbQuiz previousValue = this._tbQuiz.Entity;
				if (((previousValue != value) 
							|| (this._tbQuiz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbQuiz.Entity = null;
						previousValue.tbQuestions.Remove(this);
					}
					this._tbQuiz.Entity = value;
					if ((value != null))
					{
						value.tbQuestions.Add(this);
						this._QuizID = value.QuizID;
					}
					else
					{
						this._QuizID = default(int);
					}
					this.SendPropertyChanged("tbQuiz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.viewAverageList")]
	public partial class viewAverageList
	{
		
		private int _User_ID;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private int _Student_Score;
		
		private int _Quiz_ID;
		
		public viewAverageList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User ID]", Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this._User_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[First Name]", Storage="_First_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this._First_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Last Name]", Storage="_Last_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this._Last_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Student Score]", Storage="_Student_Score", DbType="Int NOT NULL")]
		public int Student_Score
		{
			get
			{
				return this._Student_Score;
			}
			set
			{
				if ((this._Student_Score != value))
				{
					this._Student_Score = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Quiz ID]", Storage="_Quiz_ID", DbType="Int NOT NULL")]
		public int Quiz_ID
		{
			get
			{
				return this._Quiz_ID;
			}
			set
			{
				if ((this._Quiz_ID != value))
				{
					this._Quiz_ID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.viewActiveQuiz")]
	public partial class viewActiveQuiz
	{
		
		private int _Quiz_ID;
		
		private int _User_ID;
		
		private int _Student_Attempt;
		
		private int _Student_Score;
		
		public viewActiveQuiz()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Quiz ID]", Storage="_Quiz_ID", DbType="Int NOT NULL")]
		public int Quiz_ID
		{
			get
			{
				return this._Quiz_ID;
			}
			set
			{
				if ((this._Quiz_ID != value))
				{
					this._Quiz_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User ID]", Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this._User_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Student Attempt]", Storage="_Student_Attempt", DbType="Int NOT NULL")]
		public int Student_Attempt
		{
			get
			{
				return this._Student_Attempt;
			}
			set
			{
				if ((this._Student_Attempt != value))
				{
					this._Student_Attempt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Student Score]", Storage="_Student_Score", DbType="Int NOT NULL")]
		public int Student_Score
		{
			get
			{
				return this._Student_Score;
			}
			set
			{
				if ((this._Student_Score != value))
				{
					this._Student_Score = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.viewSUMofScores")]
	public partial class viewSUMofScore1
	{
		
		private int _Attempt_ID;
		
		private int _Quiz_ID;
		
		private int _User_ID;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private System.Nullable<int> _Student_Attempt;
		
		private System.Nullable<int> _Student_Score;
		
		public viewSUMofScore1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Attempt ID]", Storage="_Attempt_ID", DbType="Int NOT NULL")]
		public int Attempt_ID
		{
			get
			{
				return this._Attempt_ID;
			}
			set
			{
				if ((this._Attempt_ID != value))
				{
					this._Attempt_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Quiz ID]", Storage="_Quiz_ID", DbType="Int NOT NULL")]
		public int Quiz_ID
		{
			get
			{
				return this._Quiz_ID;
			}
			set
			{
				if ((this._Quiz_ID != value))
				{
					this._Quiz_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User ID]", Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this._User_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[First Name]", Storage="_First_Name", DbType="NVarChar(50)")]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this._First_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Last Name]", Storage="_Last_Name", DbType="NVarChar(50)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this._Last_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Student Attempt]", Storage="_Student_Attempt", DbType="Int")]
		public System.Nullable<int> Student_Attempt
		{
			get
			{
				return this._Student_Attempt;
			}
			set
			{
				if ((this._Student_Attempt != value))
				{
					this._Student_Attempt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Student Score]", Storage="_Student_Score", DbType="Int")]
		public System.Nullable<int> Student_Score
		{
			get
			{
				return this._Student_Score;
			}
			set
			{
				if ((this._Student_Score != value))
				{
					this._Student_Score = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.viewQuizNum")]
	public partial class viewQuizNum
	{
		
		private int _QuizID;
		
		private string _QuizDetails;
		
		private bool _QuizStatus;
		
		public viewQuizNum()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int QuizID
		{
			get
			{
				return this._QuizID;
			}
			set
			{
				if ((this._QuizID != value))
				{
					this._QuizID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizDetails", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string QuizDetails
		{
			get
			{
				return this._QuizDetails;
			}
			set
			{
				if ((this._QuizDetails != value))
				{
					this._QuizDetails = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizStatus", DbType="Bit NOT NULL")]
		public bool QuizStatus
		{
			get
			{
				return this._QuizStatus;
			}
			set
			{
				if ((this._QuizStatus != value))
				{
					this._QuizStatus = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.viewQuestionAnswer")]
	public partial class viewQuestionAnswer
	{
		
		private int _UserTypeID;
		
		private string _UserFirstName;
		
		private string _UserLastName;
		
		private int _QuizID;
		
		private string _QQuestion;
		
		private string _QOne;
		
		private string _QTwo;
		
		private string _QThree;
		
		private string _QFour;
		
		private string _QAnswer;
		
		private string _QImage;
		
		public viewQuestionAnswer()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", DbType="Int NOT NULL")]
		public int UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					this._UserTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserFirstName
		{
			get
			{
				return this._UserFirstName;
			}
			set
			{
				if ((this._UserFirstName != value))
				{
					this._UserFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserLastName
		{
			get
			{
				return this._UserLastName;
			}
			set
			{
				if ((this._UserLastName != value))
				{
					this._UserLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizID", DbType="Int NOT NULL")]
		public int QuizID
		{
			get
			{
				return this._QuizID;
			}
			set
			{
				if ((this._QuizID != value))
				{
					this._QuizID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QQuestion", DbType="NVarChar(MAX)")]
		public string QQuestion
		{
			get
			{
				return this._QQuestion;
			}
			set
			{
				if ((this._QQuestion != value))
				{
					this._QQuestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QOne", DbType="NVarChar(100)")]
		public string QOne
		{
			get
			{
				return this._QOne;
			}
			set
			{
				if ((this._QOne != value))
				{
					this._QOne = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTwo", DbType="NVarChar(100)")]
		public string QTwo
		{
			get
			{
				return this._QTwo;
			}
			set
			{
				if ((this._QTwo != value))
				{
					this._QTwo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QThree", DbType="NVarChar(100)")]
		public string QThree
		{
			get
			{
				return this._QThree;
			}
			set
			{
				if ((this._QThree != value))
				{
					this._QThree = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QFour", DbType="NVarChar(100)")]
		public string QFour
		{
			get
			{
				return this._QFour;
			}
			set
			{
				if ((this._QFour != value))
				{
					this._QFour = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QAnswer", DbType="NVarChar(100)")]
		public string QAnswer
		{
			get
			{
				return this._QAnswer;
			}
			set
			{
				if ((this._QAnswer != value))
				{
					this._QAnswer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QImage", DbType="NVarChar(MAX)")]
		public string QImage
		{
			get
			{
				return this._QImage;
			}
			set
			{
				if ((this._QImage != value))
				{
					this._QImage = value;
				}
			}
		}
	}
	
	public partial class uspLoginQuizResult
	{
		
		private int _QuizID;
		
		public uspLoginQuizResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuizID", DbType="Int NOT NULL")]
		public int QuizID
		{
			get
			{
				return this._QuizID;
			}
			set
			{
				if ((this._QuizID != value))
				{
					this._QuizID = value;
				}
			}
		}
	}
	
	public partial class uspLoginResult
	{
		
		private int _UserID;
		
		private string _UserFirstName;
		
		private string _UserLastName;
		
		private string _UserPassword;
		
		public uspLoginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserFirstName
		{
			get
			{
				return this._UserFirstName;
			}
			set
			{
				if ((this._UserFirstName != value))
				{
					this._UserFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserLastName
		{
			get
			{
				return this._UserLastName;
			}
			set
			{
				if ((this._UserLastName != value))
				{
					this._UserLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this._UserPassword = value;
				}
			}
		}
	}
	
	public partial class uspLoginUserResult
	{
		
		private int _UserID;
		
		private int _UserTypeID;
		
		private string _UserPassword;
		
		public uspLoginUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", DbType="Int NOT NULL")]
		public int UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					this._UserTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this._UserPassword = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
